##From SwaggerConfig
app.version=1.0.0
app.name=Breaking Bad Application
app.description=just another Spring Boot REST API application


## application properties for inmemory development
#spring.main.allow-bean-definition-overriding=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.initialize=true
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.h2.console.settings.web-allow-others=false

##harcoded properties for inmemory development. This is not recommended for production
#app.jwtSecret=jwtSecretisJustaSecretKey
#app.client-url=http://localhost:3000

## application properties for production.
app.clientUrl=${CLIENT_URL}
app.jwtSecret=${JWT_SECRET}

springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED}
# jdbc:postgresql://localhost:5432/springDevDb for the value in environment variable DATABASE_URL
spring.datasource.url=${DATABASE_URL}
# postgres for the value in environment variable DATABASE_USERNAME
spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.username=
# pass for the value in environment variable DATABASE_PASSWORD
spring.datasource.password=${DATABASE_PASSWORD}
#spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true



